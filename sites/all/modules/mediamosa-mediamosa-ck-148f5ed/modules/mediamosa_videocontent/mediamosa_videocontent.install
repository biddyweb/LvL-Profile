<?php
// $Id$

/**
* VP-Core is a Full Featured, Webservice Oriented Media Management and
* Distribution platform (http://www.vpcore.nl)
*
* Copyright (C) 2009 Kennisnet (http://www.kennisnet.nl)
*
* VP-Core is based on the open source Drupal platform and was originally
* developed by Madcap BV (http://www.madcap.nl)
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License version 2 as
* published by the Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but
* WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
*
* You should have received a copy of the GNU General Public License along
* with this program; if not, you can find it at:
* http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
*/

/**
 * @file
 * This module is an extension to mediamosa_media module. Provides a few typical content types.
 */

/**
 * Implementation of hook_install().
 */
function mediamosa_videocontent_install() {
  /* @todo add content type 'Mediamosa Video'
  
   - Node Title; 
   - Node Body (Video description);
   - Video; 
   - standard Upload module deactivated (hidden)
   
   By default 
     IS published;
     NOT promoted to Frontpage;
     Comments are DISABLED
  
  */

  drupal_load('module', 'watchdog');

  drupal_load('module', 'content');
  content_notify('install', 'mediamosa_videocontent');
  variable_set("comment_mediamosa_videocontent", COMMENT_NODE_DISABLED);
  
  // @todo: disable promotion-to-frontpage
}

/**
 * Implementation of hook_uninstall().
 */
function mediamosa_videocontent_uninstall() {
  $sql_result = db_query("SELECT name FROM {variable} WHERE name LIKE 'mediamosa_videocontent_%'");
  while ($sql_result_object = db_fetch_object($sql_result)) {
    variable_del($sql_result_object->name);
  }
  variable_del("comment_mediamosa_videocontent");

  drupal_load('module', 'content');
  content_notify('uninstall', 'mediamosa_videocontent');
  content_clear_type_cache();
}

/**
 * Implementation of hook_enable().
 *
 * Notify content module when this module is enabled.
 */
function mediamosa_videocontent_enable() {
  drupal_load('module', 'content');
  content_notify('enable', 'mediamosa_videocontent');
  
  drupal_load('module', 'emvideo');
  drupal_load('module', 'emfield');

  _add_video_field();
}

/**
 * Implementation of hook_disable().
 *
 * Notify content module when this module is disabled.
 */
function mediamosa_videocontent_disable() {
  drupal_load('module', 'content');
  content_notify('disable', 'mediamosa_videocontent');
  content_clear_type_cache();
}

/**
 * Here we creating a new field and attaching it to a content type. 
 * In fact we're just importing a dump created by code like:
 *   
 *   module_load_include('inc', 'content', 'includes/content.crud');
 *   var_export(content_fields('field_test_video', 'test'));
 *
 * 
 */
function _add_video_field() {
  $params = array(
    'field_name' => 'field_mediamosa_videofile',
    'type_name' => 'mediamosa_videocontent'
  );
  if (content_field_instance_read($params)) {
    return;
  }
  $field = array(
      'field_name' => 'field_mediamosa_videofile',
      'type_name' => 'mediamosa_videocontent',
      'display_settings' =>
      array(
          'weight' => '31',
          'parent' => '',
          'label' =>
          array(
              'format' => 'above',
          ),
          'teaser' =>
          array(
              'format' => 'video_replace_preview',
              'exclude' => 0,
          ),
          'full' =>
          array(
              'format' => 'video_video',
              'exclude' => 0,
          ),
          4 =>
          array(
              'format' => 'default',
              'exclude' => 0,
          ),
      ),
      'widget_active' => '1',
      'type' => 'emvideo',
      'required' => '0',
      'multiple' => '0',
      'db_storage' => '0',
      'module' => 'emvideo',
      'active' => '1',
      'locked' => '0',
      'columns' =>
      array(
          'embed' =>
          array(
              'type' => 'text',
              'size' => 'big',
              'not null' => false,
              'sortable' => true,
          ),
          'value' =>
          array(
              'type' => 'varchar',
              'length' => 255,
              'not null' => false,
              'sortable' => true,
          ),
          'provider' =>
          array(
              'type' => 'varchar',
              'length' => 255,
              'not null' => false,
              'sortable' => true,
          ),
          'data' =>
          array(
              'type' => 'text',
              'size' => 'big',
              'not null' => false,
              'sortable' => false,
          ),
          'status' =>
          array(
              'description' => 'The availability status of this media.',
              'type' => 'int',
              'unsigned' => 'TRUE',
              'not null' => true,
              'default' => 1,
          ),
          'version' =>
          array(
              'description' => 'The version of the provider\'s data.',
              'type' => 'int',
              'unsigned' => true,
              'not null' => true,
              'default' => 0,
          ),
          'title' =>
          array(
              'type' => 'varchar',
              'length' => 255,
              'not null' => false,
              'sortable' => true,
          ),
          'description' =>
          array(
              'type' => 'varchar',
              'length' => 255,
              'not null' => false,
              'sortable' => true,
          ),
          'duration' =>
          array(
              'description' => 'Store the duration of a video in seconds.',
              'type' => 'int',
              'unsigned' => true,
              'not null' => true,
              'default' => 0,
          ),
      ),
      'widget' =>
      array(
          'video_width' => '425',
          'video_height' => '350',
          'video_autoplay' => 0,
          'preview_width' => '425',
          'preview_height' => '350',
          'preview_autoplay' => 0,
          'thumbnail_width' => '120',
          'thumbnail_height' => '90',
          'thumbnail_default_path' => '',
          'thumbnail_link_title' => 'See video',
          
          'providers' =>
          array(
              'mediamosa' => 'mediamosa',
          ),
          'default_value' =>
          array(
              0 =>
              array(
                  'embed' => '',
                  'value' => '',
                  
              ),
          ),
          'default_value_php' => NULL,
          'label' => 'Mediamosa video',
          'weight' => '31',
          'description' => 'Please attach your video to submit to Mediamosa',
          'type' => 'emvideo_textfields',
          'module' => 'emvideo',
      ),
  );

  module_load_include('inc', 'content', 'includes/content.crud');

  content_field_instance_create($field);
}
